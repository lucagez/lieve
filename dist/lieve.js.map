{"version":3,"file":"lieve.js","sources":["../src/utils.mjs","../src/lieve.mjs"],"sourcesContent":["const _body = (req, type) => {\n  return new Promise(resolve => {\n    const chunks = [];\n    req.on('data', chunk => chunks.push(chunk))\n    req.on('end', () => {\n      const body = Buffer.concat(chunks).toString();\n      switch (type) {\n        case 'x-www-form-urlencoded':\n          const parsed = {};\n          body.split('&').map(e => {\n            const [prop, value] = e.split('=');\n            parsed[prop] = value;\n          });\n          resolve(parsed);\n          break;\n        case 'binary':\n          resolve({ file: body });\n          break;\n        default:\n          resolve(body);\n      }\n    });\n  });\n};\n\nconst _cookie = req => {\n  const { cookie } = req.headers;\n  if (!cookie) return {};\n  const basket = {};\n  cookie.split(';').forEach(e => {\n    const [prop, value] = e.split('=').map(e => e.trim());\n    basket[prop] = value;\n  });\n  return basket;\n};\n\nconst _query = (req, delimiter = '&') => {\n  const { url } = req;\n  const query = {};\n  url.match(/[^?]+$/)[0].split(delimiter).map(e => {\n    const [prop, value] = e.split('=');\n    query[prop] = value;\n  });\n  return query;\n}; \n\nconst _list = (routes) => {\n  const pieces = Object.keys(routes)\n    .map(e => e.split('/').slice(1))\n    .flat()\n    .filter(e => e !== ':par');\n\n  return Array.from(new Set(pieces))//.join();\n};\n\nconst _set = (req, prop, value, writable = false) => {\n  Object.defineProperty(req, prop, {\n    value,\n    writable,\n  });\n};\n\nfunction _send(content, type = 'text/plain', status = 200) {\n  this.writeHead(status, { 'Content-Type': type });\n  this.end(content, false, false);\n};\n\nfunction _next() {\n  this.index += 1;\n  return this.queue[this.index];\n};\n\nexport {\n  _body,\n  _cookie,\n  _query,\n  _send,\n  _set,\n  _next,\n  _list,\n};\n","import { _send, _next, _list } from './utils';\n\nfunction find(url) {\n  if (url === '/') return {\n    path: url,\n    par: undefined,\n  };\n\n  const use = url.replace(this.matchUrl, '');\n  par = use.match(this.matchPar)[0];\n  path = this.list.indexOf(par) > -1\n    ? use\n    : use.replace(par, ':par');\n\n  return { path, par };\n}\n\nfunction router(req, res) {\n  const { url, method } = req;\n\n  req['par'] = par;\n  req['queue'] = queue;\n  req['index'] = 0;\n  req['next'] = _next.bind(req);\n  res['send'] = _send;\n\n  const { path, par } = this.find(url);\n\n  const route = this.routes[path] || {};\n\n  // before/after route handler\n  const { before = [], after = [] } = route;\n  const handler = route[method];\n  if (!handler) {\n    res.send(JSON.stringify({\n      error: 'Not Found',\n      status: 404,\n    }), 'application/json', 404);\n    return;\n  };\n\n  const queue = [...this.before, ...before, handler, ...after, ...this.after];\n\n  queue[0](req, res);\n};\n\nfunction _queues(routes) {\n  const queues = {};\n  Object.keys(routes).forEach(endpoint => {\n    if (endpoint !== 'beforeAll' && endpoint !== 'afterAll') {\n      queues[endpoint] = {};\n\n      Object.keys(routes[endpoint]).forEach(method => {\n        if (method !== 'before' && method !== 'after') {\n          const { beforeAll = [], afterAll = [] } = routes;\n          const { before = [], after = [] } = routes[endpoint];\n          const handler = routes[endpoint][method];\n          const queue = [...beforeAll, ...before, handler, ...after, ...afterAll];\n\n          queues[endpoint][method] = queue;\n        }\n      });\n    }\n  });\n\n  return queues;\n}\n\nexport class Lieve {\n  constructor(routes) {\n    this.routes = routes;\n    // before/after every request\n    this.before = routes.before || [];\n    this.after = routes.after || [];\n    \n    this.queues = _queues(routes);\n    console.log(this.queues);\n\n    this.list = _list(routes);\n    this.matchPar = new RegExp(/[^\\/]+$/);\n    this.matchUrl = new RegExp(/\\/$|\\?(.*)/);\n\n    this.find = find.bind(this);\n    this.router = router.bind(this);\n  };\n};\n\n// export function Lieve(routes) {\n//   this.routes = routes;\n//   // before/after every request\n//   this.before = routes.before || [];\n//   this.after = routes.after || [];\n//   this.list = _list(routes);\n//   this.matchPar = new RegExp(/[^\\/]+$/);\n//   this.matchUrl = new RegExp(/\\/$|\\?(.*)/);\n\n//   this.router = router.bind(this);\n// }\n\nexport { _body, _cookie, _query, _set } from './utils';\n"],"names":["_send","content","type","status","writeHead","end","constructor","routes","before","after","queues","Object","keys","forEach","endpoint","method","queue","beforeAll","afterAll","_queues","log","this","list","pieces","map","e","split","slice","flat","filter","Array","from","Set","_list","matchPar","RegExp","matchUrl","find","url","path","par","undefined","use","replace","match","indexOf","bind","router","req","res","index","route","handler","send","JSON","stringify","error","Promise","resolve","chunks","on","chunk","push","body","Buffer","concat","toString","parsed","file","headers","cookie","basket","trim","delimiter","query","prop","value","writable","defineProperty"],"mappings":"AA8DA,SAASA,EAAMC,EAASC,EAAqBC,kBAAd,6BAAuB,UAC/CC,UAAUD,EAAQ,gBAAkBD,SACpCG,IAAIJ,GAAS,GAAO,iBCKzBK,SAAYC,QACLA,OAASA,OAETC,OAASD,EAAOC,QAAU,QAC1BC,MAAQF,EAAOE,OAAS,QAExBC,OA7BT,SAAiBH,OACTG,EAAS,UACfC,OAAOC,KAAKL,GAAQM,iBAAQC,GACT,cAAbA,GAAyC,aAAbA,IAC9BJ,EAAOI,GAAY,GAEnBH,OAAOC,KAAKL,EAAOO,IAAWD,iBAAQE,MACrB,WAAXA,GAAkC,UAAXA,EAAoB,kCACzB,oCAAe,UACCR,EAAOO,6BAA1B,iCAAY,QAEvBE,EAAQC,SAAkBT,GADhBD,EAAOO,GAAUC,IACgBN,EAAUS,GAE3DR,EAAOI,GAAUC,GAAUC,QAM5BN,EAUSS,CAAQZ,WACda,IAAIC,KAAKX,aAEZY,cDhCMf,OACPgB,EAASZ,OAAOC,KAAKL,GACxBiB,aAAIC,UAAKA,EAAEC,MAAM,KAAKC,MAAM,KAC5BC,OACAC,gBAAOJ,SAAW,SAANA,WAERK,MAAMC,KAAK,IAAIC,IAAIT,IC0BZU,CAAM1B,QACb2B,SAAW,IAAIC,OAAO,gBACtBC,SAAW,IAAID,OAAO,mBAEtBE,KAhFT,SAAcC,MACA,MAARA,EAAa,MAAO,CACtBC,KAAMD,EACNE,SAAKC,OAGDC,EAAMJ,EAAIK,QAAQtB,KAAKe,SAAU,WACvCI,IAAME,EAAIE,MAAMvB,KAAKa,UAAU,GAC/BK,KAAOlB,KAAKC,KAAKuB,QAAQL,MAAQ,EAC7BE,EACAA,EAAIC,QAAQH,IAAK,QAEd,MAAED,SAAMC,MAoEIM,KAAKzB,WACjB0B,OAlET,SAAgBC,EAAKC,0BAGnBD,EAAG,IAAUR,EACbQ,EAAG,MAAYhC,EACfgC,EAAG,MAAY,EACfA,EAAG,KD4CL,uBACOE,OAAS,EACP7B,KAAKL,MAAMK,KAAK6B,QC9CHJ,KAAKE,GACzBC,EAAG,KAAWjD,QAEQqB,KAAKgB,KAAKC,WAE1Ba,EAAQ9B,KAAKd,gBAAgB,6BAGlB,iCAAY,QACvB6C,EAAUD,EAAMpC,MACjBqC,OAQCpC,EAAYK,mBAAgBb,GAAQ4C,GAAY3C,EAAUY,KAAKZ,OAErEO,EAAM,GAAGgC,EAAKC,QATZA,EAAII,KAAKC,KAAKC,UAAU,CACtBC,MAAO,YACPrD,OAAQ,MACN,mBAAoB,MA8CH2C,KAAKzB,8BDnFf2B,EAAK9C,UACX,IAAIuD,iBAAQC,OACXC,EAAS,GACfX,EAAIY,GAAG,gBAAQC,UAASF,EAAOG,KAAKD,KACpCb,EAAIY,GAAG,qBACCG,EAAOC,OAAOC,OAAON,GAAQO,kBAC3BhE,OACD,4BACGiE,EAAS,GACfJ,EAAKrC,MAAM,KAAKF,aAAIC,SACIA,EAAEC,MAAM,KAC9ByC,eAEFT,EAAQS,aAEL,SACHT,EAAQ,CAAEU,KAAML,kBAGhBL,EAAQK,kCAMFf,SACKA,EAAIqB,mBAClBC,EAAQ,MAAO,OACdC,EAAS,UACfD,EAAO5C,MAAM,KAAKb,iBAAQY,SACFA,EAAEC,MAAM,KAAKF,aAAIC,UAAKA,EAAE+C,SAC9CD,eAEKA,2BAGOvB,EAAKyB,kBAAY,KACvBnC,IACFoC,EAAQ,gBACV9B,MAAM,UAAU,GAAGlB,MAAM+C,GAAWjD,aAAIC,SACpBA,EAAEC,MAAM,KAC9BgD,eAEKA,yBAYK1B,EAAK2B,EAAMC,EAAOC,mBAAW,GACzClE,OAAOmE,eAAe9B,EAAK2B,EAAM,OAC/BC,WACAC"}