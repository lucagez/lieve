{"version":3,"file":"lieve.mjs","sources":["../src/plugins.mjs","../src/decor.mjs","../src/lieve.mjs","../src/utils.mjs"],"sourcesContent":["function _body(req, type) {\n  return new Promise(resolve => {\n    const chunks = [];\n    req.on('data', chunk => chunks.push(chunk))\n    req.on('end', () => {\n      const body = Buffer.concat(chunks).toString();\n      switch (type) {\n        case 'x-www-form-urlencoded':\n          const parsed = {};\n          body.split('&').map(e => {\n            const [prop, value] = e.split('=');\n            parsed[prop] = value;\n          });\n          resolve(parsed);\n          break;\n        case 'binary':\n          resolve({ file: body });\n          break;\n        default:\n          resolve(body);\n      }\n    });\n  });\n};\n\nfunction _cookie(req) {\n  const { cookie } = req.headers;\n  if (!cookie) return {};\n  const basket = {};\n  cookie.split(';').forEach(e => {\n    const [prop, value] = e.split('=').map(e => e.trim());\n    basket[prop] = value;\n  });\n  return basket;\n}\n\nexport {\n  _body,\n  _cookie,\n};\n","function _send({ content, type = 'text/plain', status = 200 }) {\n  this.statusCode = status;\n  this.setHeader('Content-Type', type);\n  this.end(content);\n};\n\nfunction _set(prop, val) {\n  this[prop] = val;\n};\n\nfunction _next(req, res) {\n  this.index += 1;\n  this.queue[this.index](req, res);\n};\n\nconst decor = (req, res) => {\n  req.set = _set;\n  req.next = _next.bind(req);\n  res.send = _send;\n};\n\nexport default decor;\n","import { _body, _cookie } from './plugins';\nimport { list } from './utils';\nimport decor from './decor';\n\nclass Lieve {\n  constructor(routes) {\n    this.routes = routes;\n    this.list = list(routes);\n    this.index = 0;\n\n    this.find = this.find.bind(this);\n    this.router = this.router.bind(this);\n  };\n\n\n  find(url) {\n    const params = [];\n\n    const pieceOrParam = e => this.list.indexOf(e) > -1\n      ? e\n      : (() => {\n        params.push(e);\n        return ':par';\n      })();\n\n    const path = '/' + url\n      .replace(/\\/$/g, '')\n      .split('/').slice(1)\n      .map(pieceOrParam)\n      .join('/');\n\n    return { path, params };\n  };\n\n  router(req, res) {\n    const { url, method } = req;\n    decor(req, res);\n    try {\n      // before/after every request\n      const { before = [], after = [] } = this.routes;\n      const { path, params } = this.find(url);\n\n      const route = this.routes[path] || {};\n      \n      // pre/post route handler\n      const { pre = [], post = [] } = route;\n      const handler = route[method];\n      \n      \n      if (typeof handler !== 'function') throw new Error('undefined endpoint');\n      \n      const queue = [...before, ...pre, handler, ...post, ...after];\n      \n      req.set('params', params);\n      req.set('queue', queue);\n      req.set('index', 0);\n\n      queue[0](req, res);\n    } catch (err) {\n      res.send({\n        type: 'application/json',\n        status: 404,\n        content: JSON.stringify({\n          error: 'Not Found',\n          status: 404,\n        }),\n      });\n    }\n  };\n};\n\nexport {\n  Lieve,\n  _body,\n  _cookie,\n};","const list = (routes) => {\n  const pieces = Object.keys(routes)\n    .map(e => e.split('/').slice(1))\n    .flat()\n    .filter(e => e !== ':par');\n\n  return Array.from(new Set(pieces));\n};\n\nexport { list };\n"],"names":["_body","req","type","Promise","resolve","chunks","on","chunk","push","body","Buffer","concat","toString","parsed","split","map","e","file","_cookie","headers","cookie","basket","forEach","trim","_send","ref","statusCode","status","setHeader","end","content","_set","prop","val","const","Lieve","constructor","routes","list","pieces","Object","keys","slice","flat","filter","Array","from","Set","index","find","this","bind","router","url","params","replace","indexOf","join","res","set","next","queue","send","decor","route","handler","method","Error","before","pre","post","after","err","JSON","stringify"],"mappings":"AAAA,SAASA,EAAMC,EAAKC,UACX,IAAIC,iBAAQC,OACXC,EAAS,GACfJ,EAAIK,GAAG,gBAAQC,UAASF,EAAOG,KAAKD,KACpCN,EAAIK,GAAG,qBACCG,EAAOC,OAAOC,OAAON,GAAQO,kBAC3BV,OACD,4BACGW,EAAS,GACfJ,EAAKK,MAAM,KAAKC,aAAIC,SACIA,EAAEF,MAAM,KAC9BD,eAEFT,EAAQS,aAEL,SACHT,EAAQ,CAAEa,KAAMR,kBAGhBL,EAAQK,QAMlB,SAASS,EAAQjB,SACIA,EAAIkB,mBAClBC,EAAQ,MAAO,OACdC,EAAS,UACfD,EAAON,MAAM,KAAKQ,iBAAQN,SACFA,EAAEF,MAAM,KAAKC,aAAIC,UAAKA,EAAEO,SAC9CF,eAEKA,ECjCT,SAASG,EAAMC,2CAAkB,4CAAuB,UACjDC,WAAaC,OACbC,UAAU,eAAgB1B,QAC1B2B,IAAIC,GAGX,SAASC,EAAKC,EAAMC,QACbD,GAAQC,EAQfC,ICXMC,EACJC,SAAYC,QACLA,OAASA,OACTC,cCPKD,OACNE,EAASC,OAAOC,KAAKJ,GACxBtB,aAAIC,UAAKA,EAAEF,MAAM,KAAK4B,MAAM,KAC5BC,OACAC,gBAAO5B,SAAW,SAANA,WAER6B,MAAMC,KAAK,IAAIC,IAAIR,IDCZD,CAAKD,QACZW,MAAQ,OAERC,KAAOC,KAAKD,KAAKE,KAAKD,WACtBE,OAASF,KAAKE,OAAOD,KAAKD,OAIjCD,YAAAA,cAAKI,cACGC,EAAS,SAeR,MANM,IAAMD,EAChBE,QAAQ,OAAQ,IAChBzC,MAAM,KAAK4B,MAAM,GACjB3B,aAVkBC,UAAKkC,EAAKZ,KAAKkB,QAAQxC,IAAM,EAC9CA,GAEAsC,EAAO9C,KAAKQ,GACL,UAORyC,KAAK,YAEOH,IAGjBF,YAAAA,gBAAOnD,EAAKyD,oCDnBCzD,EAAKyD,GAClBzD,EAAI0D,IAAM5B,EACV9B,EAAI2D,KAPN,SAAe3D,EAAKyD,QACbV,OAAS,OACTa,MAAMX,KAAKF,OAAO/C,EAAKyD,IAKXP,KAAKlD,GACtByD,EAAII,KAAOtC,ECkBTuC,CAAM9D,EAAKyD,aAG2BR,KAAKb,iCAAxB,iCAAY,UACJa,KAAKD,KAAKI,cAE7BW,EAAQd,KAAKb,gBAAgB,0BAGrB,gCAAW,QACnB4B,EAAUD,EAAME,MAGC,mBAAZD,EAAwB,MAAM,IAAIE,MAAM,0BAE7CN,EAAYO,SAAWC,GAAKJ,GAASK,EAASC,KAEhDZ,IAAI,SAAUL,KACdK,IAAI,QAASE,KACbF,IAAI,QAAS,KAEX,GAAG1D,EAAKyD,GACd,MAAOc,KACHV,KAAK,MACD,0BACE,IACRhC,QAAS2C,KAAKC,UAAU,OACf,mBACC"}