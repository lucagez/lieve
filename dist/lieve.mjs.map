{"version":3,"file":"lieve.mjs","sources":["../src/utils.mjs","../src/queues.js","../src/lieve.mjs","../src/find.js","../src/router.js"],"sourcesContent":["function _body(req, type) {\n  return new Promise((resolve) => {\n    const chunks = [];\n    req.on('data', chunk => chunks.push(chunk));\n    req.on('end', () => {\n      const body = Buffer.concat(chunks).toString();\n      switch (type) {\n        case 'x-www-form-urlencoded':\n          const parsed = {};\n          body.split('&').forEach((e) => {\n            const [prop, value] = e.split('=');\n            parsed[prop] = value;\n          });\n          resolve(parsed);\n          break;\n        case 'binary':\n          resolve({ file: body });\n          break;\n        default:\n          resolve(body);\n      }\n    });\n  });\n}\n\nfunction _turboBody(req, type) {\n  return new Promise((resolve) => {\n    const parts = [];\n    req.ondata = (buffer, start, length) => {\n      const part = buffer.slice(start, length + start).toString();\n      parts.push(part);\n    };\n\n    req.onend = () => {\n      const body = parts.join('');\n      switch (type) {\n        case 'x-www-form-urlencoded':\n          const parsed = {};\n          body.split('&').forEach((e) => {\n            const [prop, value] = e.split('=');\n            parsed[prop] = value;\n          });\n          resolve(parsed);\n          break;\n        case 'binary':\n          resolve({ file: body });\n          break;\n        default:\n          resolve(body);\n      }\n    };\n  });\n}\n\nfunction _cookie(req) {\n  const { cookie } = req.headers;\n  if (!cookie) return {};\n  const basket = {};\n  cookie.split(';').forEach((e) => {\n    const [prop, value] = e.split('=').map(f => f.trim());\n    basket[prop] = value;\n  });\n  return basket;\n}\n\nfunction _query(req, delimiter = '&') {\n  const { url } = req;\n  const query = {};\n  url.match(/[^?]+$/)[0].split(delimiter).forEach((e) => {\n    const [prop, value] = e.split('=');\n    query[prop] = value;\n  });\n  return query;\n}\n\nfunction _set(req, prop, value) {\n  if (req.hasOwnProperty(prop)) throw new Error('Trying to override req property');\n  Object.defineProperty(req, prop, { value });\n}\n\nfunction _send(content, type = 'text/plain', status = 200) {\n  // use this for `turbo-http`\n  // this.statusCode = status;\n  // this.setHeader('Content-Type', type);\n\n  // use this for core `http`\n  this.writeHead(status, {\n    'Content-Type': type,\n    // 'Content-Length': Buffer.from(content).length,\n  });\n  this.end(content, null, null);\n}\n\n// `turbo-http` send\nfunction _turboSend(content, type = 'text/plain', status = 200) {\n  this.statusCode = status;\n  this.setHeader('Content-Type', type);\n  this.end(content, null, null);\n}\n\nfunction _next() {\n  const { req, res } = this;\n  req.index += 1;\n  const func = req.queue[req.index];\n  if (func) func(req, res);\n}\n\nfunction _dummy(err) {\n  if (err) throw new Error(err);\n  return 0;\n}\n\nfunction _express(req, res, middleware, args = []) {\n  const { next } = req;\n  middleware(...args)(req, res, _dummy);\n  next(req, res);\n}\n\nexport {\n  _body,\n  _turboBody,\n  _cookie,\n  _query,\n  _send,\n  _turboSend,\n  _set,\n  _next,\n  _express,\n};\n","const toArr = obj => Object.keys(obj).map(e => obj[e]);\n\nfunction _single(obj) {\n  const queues = {};\n  Object.keys(obj).forEach((endpoint) => {\n    if (endpoint !== 'use' && endpoint !== 'extend') {\n      const { extend } = obj;\n      const usedEndpoint = extend ? extend + endpoint.replace(/\\/$/, '') : endpoint;\n\n      queues[usedEndpoint] = {};\n\n      const route = obj[endpoint];\n      Object.keys(route).forEach((method) => {\n        if (method !== 'use') {\n          const useAll = obj.use || {};\n          const afterAll = obj.after || {};\n          const useRoute = route.use || {};\n          const afterRoute = route.after || {};\n\n          // TESTING:\n          const useTopLevel = obj.useTopLevel || {};\n          const afterTopLevel = obj.afterTopLevel || {};\n          const arrUseTopLevel = toArr(useTopLevel);\n          const arrAfterTopLevel = toArr(afterTopLevel);\n\n          const arrUseAll = toArr(useAll);\n          const arrAfterAll = toArr(afterAll);\n          const arrUseRoute = toArr(useRoute);\n          const arrAfterRoute = toArr(afterRoute);\n\n          const current = route[method];\n          const handlerQueue = typeof current === 'function'\n            ? current\n            : (() => {\n              const { handler } = current;\n              const useHandler = current.use || {};\n              const afterHandler = current.after || {};\n\n              const arrUseHandler = toArr(useHandler);\n              const arrAfterHandler = toArr(afterHandler);\n              return [...arrUseHandler, ...handler, ...arrAfterHandler];\n            })();\n\n          // Top level and subrouter are now two different levels.\n          // Each middleware will be queued at the appropriate level.\n          const queue = [\n            ...arrUseTopLevel,\n            ...arrUseAll,\n            ...arrUseRoute,\n            handlerQueue,\n            ...arrAfterRoute,\n            ...arrAfterAll,\n            ...arrAfterTopLevel,\n          ].flat();\n          queues[usedEndpoint][method] = queue;\n        }\n      });\n    }\n  });\n\n  return queues;\n}\n\nexport default function _queues(routes) {\n  const { use = {}, after = {} } = routes;\n  const extended = {};\n  const filtered = {};\n  Object.keys(routes).forEach((route) => {\n    if (routes[route].hasOwnProperty('extend')) {\n      // Passing use/after middlewares at top level\n      // we need Object diffing for pass two levels of middlewares.\n      extended[route] = {\n        useTopLevel: use,\n        afterTopLevel: after,\n        ...routes[route],\n      };\n    } else {\n      filtered[route] = routes[route];\n    }\n  });\n\n  let merged = {};\n  Object.keys(extended).forEach((ext) => {\n    merged = {\n      ...merged,\n      ..._single(extended[ext]),\n    };\n  });\n\n  return {\n    ...merged,\n    ..._single(filtered),\n  };\n}\n","import router from './router';\nimport _queues from './queues';\nimport _find from './find';\n\nexport class Lieve {\n  constructor(mode, routes) {\n    this.routes = routes;\n    this.queues = _queues(routes);\n\n    this.matchUrl = new RegExp(/\\/$|\\?(.*)/);\n\n    // Updated regex => avoid matching eg: `v1` as param.\n    // Matches only numeric params. Both: `/xxx/` and `/xxx`\n    this.matchParams = new RegExp(/(?<=\\/)\\d+/g);\n    // this.matchParams = new RegExp(/[0-9]+[^\\/]?/g);\n\n    // Updated regex => match both `qs` and `params`\n    // this.matcher = new RegExp(/(?<=\\/)\\d+|\\?.+/g);\n\n    this.find = _find.bind(this);\n    this.router = router(mode).bind(this);\n  }\n}\n\nexport {\n  _body,\n  _cookie,\n  _query,\n  _set,\n  _express,\n} from './utils';\n","export default function _find(url) {\n  const params = [];\n  if (url === '/') {\n    return {\n      path: url,\n      params,\n    };\n  }\n\n  const use = url.replace(this.matchUrl, '');\n  const path = use.replace(this.matchParams, (param) => {\n    params.push(param);\n    return ':par';\n  });\n\n  return { path, params };\n}\n","import {\n  _send,\n  _turboSend,\n  _body,\n  _turboBody,\n  _next,\n} from './utils';\n\nexport default function router(mode) {\n  const useSend = mode === 'turbo' ? _turboSend : _send;\n  const useBody = mode === 'turbo' ? _turboBody : _body;\n\n  return function memo(req, res) {\n    const { url, method } = req;\n    const { path, params } = this.find(url);\n\n    res.send = useSend;\n\n    const endpoint = this.queues[path];\n    if ((endpoint || {}).hasOwnProperty(method)) {\n      const queue = endpoint[method];\n      req.params = params;\n      req.queue = queue;\n      req.index = 0;\n      req.next = _next.bind({ req, res });\n      // req.body = useBody;\n\n      queue[0](req, res);\n    } else {\n      res.send(JSON.stringify({\n        error: 'Not Found',\n        status: 404,\n      }), 'application/json', 404);\n    }\n  };\n}\n"],"names":["_body","req","type","Promise","resolve","chunks","on","chunk","push","body","Buffer","concat","toString","parsed","split","forEach","e","file","_cookie","headers","cookie","basket","map","f","trim","_query","delimiter","url","query","match","_set","prop","value","hasOwnProperty","Error","Object","defineProperty","_send","content","status","writeHead","end","_turboSend","statusCode","setHeader","_dummy","err","_express","res","middleware","args","next","const","toArr","obj","keys","_single","queues","endpoint","extend","usedEndpoint","replace","route","method","useAll","use","afterAll","after","useRoute","afterRoute","afterTopLevel","arrUseTopLevel","useTopLevel","arrAfterTopLevel","arrUseAll","arrAfterAll","arrUseRoute","arrAfterRoute","current","handlerQueue","afterHandler","arrUseHandler","arrAfterHandler","handler","queue","flat","Lieve","constructor","mode","routes","extended","filtered","merged","ext","_queues","matchUrl","RegExp","matchParams","find","params","path","this","param","bind","router","useSend","send","index","func","JSON","stringify","error"],"mappings":"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"}